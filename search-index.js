var searchIndex = JSON.parse('{\
"signals_rs":{"doc":"A lua(u)-inspired implementation of signals/events in rust.","t":"DDLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLL","n":["Arguments","Signal","borrow","borrow","borrow_mut","borrow_mut","connect","connections","destroy","destroyed","disconnect","drop","fire","fmt","from","from","get","get_mut","insert","into","into","new","new","new_with_capacity","push","remove","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"signals_rs"]],"d":["","signals-rs","","","","","<code>Signal.connect</code> registers a supplied callback …","","<code>Signal.destroy</code> destroys the signal and all registered …","","<code>Signal.disconnect</code> disconnects a registered callback from a …","","<code>Signal.fire</code> fires a callback from a connection registered …","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","<code>Signal::new</code> instantiates and returns a new Signal, which …","","","","","","","","","","","",""],"i":[0,0,1,5,1,5,1,1,1,1,1,1,1,5,1,5,5,5,5,1,5,1,5,5,5,5,1,5,1,5,1,5,1,5],"f":[0,0,[[]],[[]],[[]],[[]],[[1,2]],0,[1],0,[[1,[4,[3]]]],[1],[[1,[4,[3]],[4,[5]]]],[[5,6],[[8,[7]]]],[[]],[[]],[[5,9],[[4,[10]]]],[[5,9],[[4,[10]]]],[[5,9,10]],[[]],[[]],[[],1],[[],5],[9,5],[[5,10]],[[5,9],[[4,[10]]]],[[],8],[[],8],[[],8],[[],8],[[],11],[[],11],[[]],[[]]],"c":[],"p":[[3,"Signal"],[8,"Fn"],[3,"String"],[4,"Option"],[3,"Arguments"],[3,"Formatter"],[3,"Error"],[4,"Result"],[15,"usize"],[8,"Any"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
